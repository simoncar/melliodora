// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`no access to camera 1`] = `
<Text
  style={
    Array [
      Object {
        "fontFamily": "SegoeUI",
        "fontSize": 17,
      },
      undefined,
    ]
  }
>
  No access to camera
</Text>
`;

exports[`show camera screen 1`] = `
<View
  style={
    Object {
      "backgroundColor": "black",
      "flex": 1,
    }
  }
>
  <ViewManagerAdapter_ExponentCamera
    onCameraReady={[Function]}
    onFacesDetected={[Function]}
    onMountError={[Function]}
    onPictureSaved={[Function]}
    proxiedProperties={
      Object {
        "autoFocus": undefined,
        "faceDetectorSettings": Object {},
        "flashMode": undefined,
        "focusDepth": 0,
        "type": undefined,
        "whiteBalance": undefined,
        "zoom": 0,
      }
    }
    style={
      Object {
        "height": 600,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 70,
        "justifyContent": "space-between",
        "margin": 20,
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontFamily": "SegoeUI",
              "fontSize": 17,
            },
            Object {
              "alignItems": "center",
              "color": "white",
              "fontSize": 16,
              "justifyContent": "center",
            },
          ]
        }
      >
        Cancel
      </Text>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "lightgrey",
          "borderColor": "darkgrey",
          "borderRadius": 40,
          "borderWidth": 2,
          "height": 80,
          "justifyContent": "center",
          "opacity": 1,
          "width": 80,
        }
      }
      testID="camera.takePhoto"
    />
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "darkgrey",
          "borderRadius": 25,
          "height": 50,
          "justifyContent": "center",
          "opacity": 1,
          "right": 15,
          "width": 50,
        }
      }
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          Array [
            Object {
              "color": "black",
              "fontSize": 30,
            },
            Object {
              "transform": Array [
                Object {
                  "rotateZ": "70deg",
                },
              ],
            },
            Object {
              "fontFamily": "Fontisto",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        î§¸
      </Text>
    </View>
  </View>
</View>
`;
